{"name":"Wicker","tagline":"Javascript AMD loader","body":"# Wicker.js\r\n\r\nJavascript Module Loader  \r\nAMD互換のdefine、requireの他、独自機能によりAMDに対応していないjQueryプラグインや、グローバル関数で定義されるライブラリをAMDのように扱う事が可能です。\r\n\r\n=====\r\n## API\r\n\r\nWicker.js は \"wicker\" namespace を使用します。\r\n\r\n* [wicker.factory()](#wickerfactoryname-depends-constructor) … モジュールを定義。AMDのdefineに相当。\r\n* [wicker.carriage()](#wickercarriageurl-baseurl) … モジュールファイルをロード。require.jsのrequire.configに相当。\r\n* [wicker.config()](#wickerconfigname-props) … モジュールのコンフィギュレーションを行います。初期設定値などを指定したい時に。\r\n* [define()](#defineid-depends-constructor) … AMDのdefineと同等。\r\n* [require()](#requiredepends-controller) … define()へのエイリアス。\r\n* [dab.exports()](#dabexportsid) … namespaceをグローバル関数にエクスポートします。\r\n\r\n======\r\n### wicker.factory(name, depends, constructor)\r\n\r\nモジュールを定義します。\r\n\r\n- name: String *省略可*  \r\n  モジュール名\r\n- depends: Array  *省略可*  \r\n  関連するモジュール名  \r\n  省略した場合は[\"require\", \"exports\", \"module\"]と見なします。\r\n- constructor: Function *定義の場合は必須*  \r\n  モジュールのコンストラクタ  \r\n  関連モジュールのロードが完了したら呼び出されます。\r\n  引数: 関連モジュール\r\n\r\n#### 基本的な用法\r\n\r\n```\r\nwicker.factory(\"mymodule\", [\"jquery\"], function($){\r\n    // define your module here\r\n    \r\n    \r\n    // return accessor for this module\r\n    return {\r\n      version: \"1.0\"\r\n    };\r\n});\r\n```\r\n\r\nモジュール名`\"require\"`、`\"exports\"`、`\"module\"`はデフォルトモジュールとして定義されていますので使用できません。\r\n\r\n#### Recalling constructor\r\n\r\n第一引数に名前のみ指定する事で、コンストラクターを再度呼び出す事ができます。\r\nコンストラクターからreturn falseするとそのモジュールは未定義として処理を続行します。\r\n依存モジュールの読み込みを待機させたい場合はreturn falseしてください。\r\n\r\n```\r\nwicker.carriage([\"jquery.min.js\"]);\r\n(function(){\r\n  var mydata;\r\n  wicker.factory(\"myconfig\", [\"jquery\"], function($){\r\n    if( !mydata ){\r\n      $.ajax('config.json', {complete: function(xhr){\r\n        mydata = JSON.parse(xhr.responseText);\r\n        \r\n        wicker.factory(\"myconfig\");\r\n        \r\n        // コンテクストを確定しない場合はreturn falseする\r\n        return false;\r\n      }});\r\n    }\r\n    return mydata;\r\n  });\r\n}());\r\n\r\n// This waits for \"myconfig\" ajax load\r\nwicker.manufacture([\"myconfig\"], function(config){\r\n  console.log( config );\r\n});\r\n```\r\n\r\n======\r\n### wicker.carriage(url, baseURL)\r\n\r\nモジュールファイルを読み込みます。\r\nscriptタグにより読み込みを行いますが、要素の生成はdocumentのDOMContentLoadedイベントの後です。  \r\n全てのスクリプト要素はdefer属性がつきます。  \r\nbaseURLが省略された場合は、**wicker.jsがあるディレクトリ**を基準点とします。\r\nドキュメントと同じディレクトリを基準にする場合はbaseに './' を指定してください。\r\n\r\n- wicker.carriage( url:String )  \r\n\tモジュールローダーのURLから相対パスでurlをロード\r\n\r\n- wicker.carriage( url:String, baseURL:String )  \r\n\tbaseURLを基準とする相対パスでurlをロード\r\n- wicker.carriage( url:Array )\r\n- wicker.carriage( url:Array, baseURL:String )  \r\n  urlの各項目に対してcarriage(url:String, base:String)を実行\r\n \r\n- wicker.carriage( url:Object )  \r\n  requirejsのrequire.configに相当。  \r\n  {  \r\n    id: url,  \r\n    id: url  \r\n  }  \r\n  の形式で、モジュールに対するIDを指定可能。\r\n\r\n```\r\nwicker.carriage( {\r\n    baseURL: \"./\",\r\n    paths: {\r\n      \"jquery\": \"js/jquery.min.js\",\r\n      \"jquery.cookie\": \"js/jquery.cookie.min.js\",\r\n      \"jquery.lazyload\": {\r\n\t      \"url\": \"js/jquery.lazyload.min.js\",\r\n          'depends': ['jquery'],\r\n\t\t  \"global\": {\"jquery\": \"jQuery\"}\r\n      },\r\n      \"A\": {\r\n          \"url\": \"js/utils.js\",\r\n          \"attach\": \"globalFunction\"\r\n      }\r\n    }\r\n});\r\n```\r\n\r\nAMD互換、非AMDライブラリ（jQueryプラグインなど）の読み込みなどの、より詳しい使い方はwikiを参照してください。\r\n\r\n======\r\n### wicker.config(name, props)\r\n\r\nコンフィギュレーション。  \r\n定数を指定する。\r\n\r\n======\r\n### define(id, depends, constructor)\r\n\r\nAMD 互換の define。\r\n\r\nidは省略可能ですが、idが省略された場合はファイル名をidとして使用しますので、1ファイル1モジュールで定義する必要があります。  \r\n\r\n`wicker.carriage(id+\".js\", \"./\")`を自動的に行います。baseURLはドキュメントのURLになります。  \r\ndependsが省略された場合は`[\"require\", \"exports\", \"module\"]`を初期値として使用します。\r\n\r\n詳しい使い方はwikiを参照してください。\r\n\r\n======\r\n### require(depends, controller)\r\n\r\ndefine()へのラッパー。  \r\n\r\n======\r\n### dab.exports(id)\r\n\r\nnamespaceをグローバル関数に変換します。  \r\n\r\n* dab.exports(\"wicker\")   \r\nwicker.factory, wicker.manufacture, wicker.carriage, wicker.configをエクスポートします。\r\nエクスポートする事で、namespaceなしで記述する事ができます。  \r\n\r\n```\r\ndab.exports(\"wicker\");\r\ncarriage({\r\n  \"Backbone\": \"backbone.min.js\",\r\n  \"underscore\": \"underscore.min.js\",\r\n  \"jquery\": \"jquery.min.js\"\r\n});\r\nrequire([\"Backbone\"], function(backbone){\r\n  // use backbone here\r\n});\r\n```\r\n\r\nIDはスペース区切りで複数の指定が可能です。\r\n\r\n```\r\ndab.exports(\"wicker other_id\");\r\n```\r\n\r\n## License\r\n\r\n(c) 2014 Wicker Wings\r\n\r\n* Source code: The MIT License  \r\n* Documents: CC-BY 3.0 or later  \r\n* Sample code: Public domain or CC0  \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}